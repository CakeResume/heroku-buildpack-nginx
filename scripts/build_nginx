#!/bin/bash
# Build NGINX and modules for Heroku.
# This script is designed to run in a Heroku Stack Docker
# image. More information on the Heroku Stack can be found
# at https://devcenter.heroku.com/articles/stack

PCRE_VERSION=${PCRE_VERSION-8.45}
ZLIB_VERSION=${ZLIB_VERSION-1.2.12}
UUID4_VERSION=${UUID4_VERSION-master}
OPENRESTY_VERSION=${OPENRESTY_VERSION-1.21.4.1}

openresty_tarball_url=https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz
pcre_tarball_url=https://ftp.exim.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz
uuid4_url=https://github.com/cybozu/nginx-uuid4-module/archive/${UUID4_VERSION}.tar.gz
zlib_url=http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz

mkdir -p /app
temp_dir=$(mktemp -d /app/openresty.XXXXXXXXXX)

cd $temp_dir
echo "Temp dir: $temp_dir"

echo "Downloading $openresty_tarball_url"
curl -L $openresty_tarball_url | tar xzv

echo "Downloading $pcre_tarball_url"
(cd openresty-${OPENRESTY_VERSION} && curl -L $pcre_tarball_url | tar xvz )

echo "Downloading $zlib_url"
(cd openresty-${OPENRESTY_VERSION} && curl -L $zlib_url | tar xvz )

echo "Downloading $uuid4_url"
(cd openresty-${OPENRESTY_VERSION} && curl -L $uuid4_url | tar xvz )

release_dir=$(mktemp -d /app/nginx.XXXXXXXXXX)

# This will build `nginx-debug`
(
  cd openresty-${OPENRESTY_VERSION}
  ./configure \
    --with-debug \
    --with-pcre=pcre-${PCRE_VERSION} \
    --with-zlib=zlib-${ZLIB_VERSION} \
    --with-http_gzip_static_module \
    --with-http_realip_module \
    --with-http_ssl_module \
    --prefix=/app/openresty\
    --add-module=${temp_dir}/openresty-${OPENRESTY_VERSION}/nginx-uuid4-module-${UUID4_VERSION}
  make install
)
cp /app/openresty/nginx/sbin/nginx $release_dir/nginx-debug
rm -rf /app/openresty

# This will build `nginx`
(
  cd openresty-${OPENRESTY_VERSION}
  ./configure \
    --with-pcre=pcre-${PCRE_VERSION} \
    --with-zlib=zlib-${ZLIB_VERSION} \
    --with-http_gzip_static_module \
    --with-http_realip_module \
    --with-http_ssl_module \
    --prefix=/app/openresty \
    --add-module=${temp_dir}/openresty-${OPENRESTY_VERSION}/nginx-uuid4-module-${UUID4_VERSION}
  make install
)

cp -R /app/openresty/ $release_dir
cp $release_dir/nginx-debug $release_dir/openresty/nginx/sbin/nginx-debug
(
  cd $release_dir/openresty/bin
  ln -s ../nginx/sbin/nginx nginx
  ln -s ../nginx/sbin/nginx-debug nginx-debug
  rm ./openresty
)
tar -zcvf /app/openresty-"${STACK}".tgz -C $release_dir/openresty .
cp /app/openresty-"${STACK}".tgz $1
